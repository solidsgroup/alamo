
#
#
# Run by using this line in the alamo directory
# ./bin/alamo-2d-g++ ./gaj/pfmicromechanics/input
# 
# TODO:
# 1. How to do initial conditions, especially for phasefield
# 2. 
#
# Current Error:
# 1. pfm.region0, etc. are specified but not used.
# 
#


alamo.program		= thermomechanics # would the program be thermomechanics?
plot_file			= gaj/pfmicromechanics/output

timestep			= 0.005
stop_time 			= 0.1

amr.plot_dt			= 0.01
amr.max_level		= 2
amr.n_cell 			= 64 64 64
amr.max_grid_size	= 8

amr.blocking_factor	= 8
amr.base_regrid_int	= 100
amr.grid_eff		= 1.0
amr.ref_threshold	= 0.1
amr.cell.all		= 1

# ic.type = expressions # I don't think I need this, because I am specifying different ICs for each model Help

geometry.prob_lo		= -4 -4 -4
geometry.prob_hi		= 4 4 4
geometry.is_periodic	= 0 0 0


#### Removing Heat transfer model for PFM test.
##
## HEAT TRANSFER MODEL
##
#
#hc.heat.alpha = 1.0
#hc.heat.refinement_threshold = 0.1
#
## Work on initial conditions for heat transfer
## should be finite temperature for the entire volume Help
#hc.ic.type 			= constant
#hc.ic.constant.value 	= 1.0
#
## Work on boundary conditions for heat transfer
## should be a heat source on the top Help
#hc.bc.temp.constant.type.xhi 		= dirichlet
#hc.bc.temp.constant.type.xlo 		= dirichlet
#hc.bc.temp.constant.type.yhi 		= neumann # check these BC's
#hc.bc.temp.constant.type.ylo 		= dirichlet
#hc.bc.temp.constant.val.xhi 		= 0.0
#hc.bc.temp.constant.val.xlo		= 0.0
#hc.bc.temp.constant.val.yhi		= 1.0
#hc.bc.temp.constant.val.ylo		= 0.0

##
## PHASE FIELD MODEL
##

pfm.interval = 100 # What is this? Help
mechanics.interval = 100 # If mechanics is controlled by the microstructure integrator, do I have to have the pfm prefix for mechanics? Help

pfm.amr.max_level = 2

# Microstructure Initial Conditions
# How can I get initial conditions started like this?
# I need help on this part
pfm.ic.type	= expression
pfm.nmodels = 4
pfm.region0 = "x > 0 and y > 0"
pfm.region1 = "x < 0 and y > 0"
pfm.region2 = "x < 0 and y < 0"
pfm.region3 = "x > 0 and y < 0"

pfm.ic.region0 = "-1"
pfm.ic.region1 = "1"
pfm.ic.region2 = "-1"
pfm.ic.region3 = "1"


# Mechanics Initial Conditions
# There aren't really any initial conditions, I guess. Help


# Microstructure Boundary Conditions
pfm.bc.eta.type					= constant
pfm.bc.eta.constant.type.xhi	= neumann
pfm.bc.eta.constant.type.xlo	= neumann
pfm.bc.eta.constant.type.yhi	= neumann
pfm.bc.eta.constant.type.ylo	= neumann
pfm.bc.eta.constant.type.zhi	= neumann
pfm.bc.eta.constant.type.zlo	= neumann



# Mechanics Boundary Conditions
mechanics.bc.type					= constant
mechanics.bc.constant.type.xlo		= neumann neumann neumann # How do I make this so that there is no displacement? Neumann? Help
mechanics.bc.constant.type.xhi		= neumann neumann neumann
mechanics.bc.constant.type.xloyhi	= neumann neumann neumann
mechanics.bc.constant.type.xhiyhi	= neumann neumann neumann
mechanics.bc.constant.type.ylo		= neumann neumann neumann
mechanics.bc.constant.type.yhi		= neumann neumann neumann

mechanics.bc.constant.val.xlo		= 0.0 0.0 0.0
mechanics.bc.constant.val.xhi		= 0.0 0.0 0.0
mechanics.bc.constant.val.xhiyhi	= 0.0 0.0 0.0
mechanics.bc.constant.val.xloyhi	= 0.0 0.0 0.0
mechanics.bc.constant.val.xhiylo	= 0.0 0.0 0.0
mechanics.bc.constant.val.xloylo	= 0.0 0.0 0.0
mechanics.bc.constant.val.yhi		= 0.0 0.0 0.0
mechanics.bc.constant.val.ylo		= 0.0 0.0 0.0


# Microstructure Model Information
pfm.pf.M 		= 1.0
pfm.pf.mu 		= 10.0
pfm.pf.gamma	= 1.0
pfm.pf.l_gb		= 0.05
pfm.pf.sigma0	= 0.075


# Mechanics Model Information
# How do I specify a different elastic properties for different regions?
mechanics.model.C11 = 1.68
mechanics.model.C12	= 1.21
mechanics.model.C44	= 0.75

# Mechanics Solver Information
# mechanics.solver.fixed_iter			= 100 # Why is this line commented out?
mechanics.solver.verbose				= 3
mechancis.print_model					= 1
mechanics.print_residual				= 1
mechanics.solver.tol_rel				= 1E-8
mechanics.solver.tol_abs				= 1E-8
mechanics.solver.average_down_coeffs 	= 0
mechanics.time_evolving					= 0 # Should this be 1 or 0? Help
mechanics.tstart						= 0





