#@  [2D-1AMR-Levels-serial]
#@  exe=mechanics
#@  dim = 2
#@  nprocs = 1
#@  args = amr.max_level=0
#@
#@  [2D-1AMR-Levels-serial-coverage]
#@  exe=mechanics
#@  dim = 2
#@  nprocs = 1
#@  args = amr.max_level=0
#@  coverage = true
#@  check = false
#@
#@  [2D-2AMRLevels-serial]
#@  exe=mechanics
#@  dim = 2
#@  nprocs = 1
#@  args = amr.max_level=1
#@
#@  [2D-3AMRLevels-serial]
#@  exe=mechanics
#@  dim = 2
#@  nprocs = 1
#@
#@  [2D-3AMRLevels-parallel]
#@  exe=mechanics
#@  dim = 2
#@  nprocs = 4
#@ 
#@  [3D-1AMRLevels-serial]
#@  exe=mechanics
#@  dim = 3
#@  nprocs = 1
#@
#@  [3D-3AMRLevels-parallel]
#@  exe=mechanics
#@  dim = 3
#@  nprocs = 4

alamo.program                 = mechanics
alamo.program.mechanics.model = linear.laplacian
plot_file		      = tests/TrigTest/output

# this is not a time integration, so do
# exactly one timestep and then quit
timestep		      = 0.1
stop_time		      = 0.1

# amr parameters
amr.plot_int		      = 1
amr.max_level		      = 2
amr.n_cell		      = 32 32 32
amr.blocking_factor	      = 4
amr.regrid_int		      = 1
amr.grid_eff		      = 1.0
amr.cell.all                  = 1

# use an explicit mesh (i.e. no adaptive meshing)
explicitmesh.on               = 1
explicitmesh.lo1              = 16 16 16
explicitmesh.hi1              = 47 47 47
explicitmesh.lo2              = 48 48 48
explicitmesh.hi2              = 79 79 79

# geometry
geometry.prob_lo	      = 0 0 0
geometry.prob_hi	      = 1 1 1
geometry.is_periodic	      = 0 0 0

rhs.type = trig
rhs.trig.nr = 0 0 0
rhs.trig.ni = 1 1 1
rhs.dim = 1
rhs.alpha = 1

# laplacian coefficient
model.alpha = 1

solver.verbose = 3
solver.nriters = 1
solver.max_iter = 20

### UNIAXIAL TENSION ###
bc.type = constant


